{"version":3,"sources":["jquery-navToSelect.es.js"],"names":["global","factory","define","amd","exports","require","mod","jQuery","jqueryNavToSelectEs","this","_jquery","_classCallCheck","instance","Constructor","TypeError","_jquery2","obj","__esModule","default","_interopRequireDefault","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","DEFAULTS","maxLevel","prependTo","activeClass","linkSelector","indentString","indentSpace","placeholder","useOptgroup","namespace","itemFilter","$li","getItemLabel","find","options","text","getItemsFromList","$list","level","that","_items","children","each","$","item","value","getItemValue","label","call","linkable","isLinkable","actived","isActived","items","concat","push","onChange","data","document","location","href","navToSelect","element","$element","_isBuilded","extend","init","_this","getItems","build","$select","on","window","is","blur","trigger","class","html","buildOptions","after","indent","Array","join","_this2","index","buildOption","attr","eventType","_len","arguments","params","_key","NAMESPACE$1","onFunction","replace","word","substring","toUpperCase","apply","remove","isPlainObject"],"mappings":"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","file":"jquery-navToSelect.min.js","sourcesContent":["/**\n* jQuery NavToSelect v0.5.2\n* https://github.com/amazingSurge/jquery-navToSelect\n*\n* Copyright (c) amazingSurge\n* Released under the LGPL-3.0 license\n*/\nimport $$1 from 'jquery';\n\n/* eslint no-unused-vars: \"off\" */\n\nvar DEFAULTS = {\n  maxLevel: 4,\n  prependTo: null,\n  activeClass: 'active',\n  linkSelector: 'a:first',\n  indentString: '&ndash;',\n  indentSpace: true,\n  placeholder: 'Navigate to...',\n  useOptgroup: false,\n  namespace: 'navToSelect',\n  itemFilter($li) {\n    return true;\n  },\n  getItemLabel($li) {\n    return $li.find(this.options.linkSelector).text();\n  },\n  getItemsFromList($list, level) {\n    const that = this;\n    const _items = [];\n\n    $list.children('li').each(function() {\n      const $li = $(this);\n      if (!that.options.itemFilter($li)) {\n        return;\n      }\n      const item = {\n        value: that.getItemValue($li),\n        label: that.options.getItemLabel.call(that, $li),\n        linkable: that.isLinkable($li),\n        actived: that.isActived($li)\n      };\n      if ($li.children('ul, ol').length) {\n        item.items = [];\n        $li.children('ul, ol').each(function() {\n          item.items = item.items.concat(that.options.getItemsFromList.call(that, $(this), level + 1));\n        });\n      }\n\n      _items.push(item);\n    });\n    return _items;\n  },\n  onChange() {\n    if ($(this).data('linkable') !== false) {\n      document.location.href = this.value;\n    }\n  }\n};\n\nconst NAMESPACE$1 = 'navToSelect';\n\n/**\n * Plugin constructor\n **/\nclass navToSelect {\n  constructor(element, options) {\n    this.element = element;\n    this.$element = $$1(element);\n    this._isBuilded = false;\n\n    this.options = $$1.extend({}, DEFAULTS, options);\n    this.init();\n  }\n\n  init() {\n    const items = this.getItems();\n    this.build(items);\n\n    this.$select.on('change', this.options.onChange);\n\n    /* fix orientation change issue */\n    $$1(window).on(\"orientationchange\", () => {\n      if (this.$select.is(':hidden') && this.$select.is(':focus')) {\n        this.$select.blur();\n      }\n    });\n\n    this.trigger('ready');\n  }\n\n  build(items) {\n    this.$select = $$1('<select />', {\n      'class': this.options.namespace\n    }).html(this.buildOptions(items, 1));\n\n    if (this.options.prependTo === null) {\n      this.$element.after(this.$select);\n    } else {\n      this.$select.prependTo(this.options.prependTo);\n    }\n    this._isBuilded = true;\n  }\n\n  buildOption(item, level) {\n    let indent = new Array(level).join(this.options.indentString);\n    if (level !== 1 && this.options.indentSpace) {\n      indent += '&nbsp;';\n    }\n    return `<option value=\"${item.value}\"${item.linkable === false ? ' data-linkable=\"false\"' : ''}${item.actived === true ? ' selected=\"selected\"' : ''}>${indent}${item.label}</option>`;\n  }\n\n  buildOptions(items, level) {\n    if (level > this.options.maxLevel) {\n      return '';\n    }\n    let options = '';\n    $$1.each(items, (index, item) => {\n      if (item.linkable === false && typeof item.items !== 'undefined' && level === 1 && this.options.useOptgroup) {\n        options += `<optgroup label=\"${item.label}\">`;\n        options += this.buildOptions(item.items, level + 1);\n        options += '</optgroup>';\n      }\n      if (typeof item.items !== 'undefined') {\n        options += this.buildOption(item, level);\n        options += this.buildOptions(item.items, level + 1);\n      } else {\n        options += this.buildOption(item, level);\n      }\n    });\n    return options;\n  }\n\n  getItems() {\n    let items = [];\n    if (this.options.placeholder) {\n      items = items.concat({\n        value: \"#\",\n        label: this.options.placeholder,\n        linkable: false\n      });\n    }\n\n    items = items.concat(this.options.getItemsFromList.call(this, this.$element, 1));\n    return items;\n  }\n\n  // Get link url\n  getItemValue($li) {\n    return $li.find(this.options.linkSelector).attr('href');\n  }\n\n  // Check if a item can link\n  isLinkable($li) {\n    return this.getItemValue($li) !== '#';\n  }\n\n  // Check if a item is actived\n  isActived($li) {\n    return $li.is(`.${this.options.activeClass}`);\n  }\n\n  // Check if select is builded already\n  isBuilded() {\n    return this._isBuilded;\n  }\n\n  trigger(eventType, ...params) {\n    let data = [this].concat(params);\n\n    // event\n    this.$element.trigger(`${NAMESPACE$1}::${eventType}`, data);\n\n    // callback\n    eventType = eventType.replace(/\\b\\w+\\b/g, (word) => {\n      return word.substring(0, 1).toUpperCase() + word.substring(1);\n    });\n    let onFunction = `on${eventType}`;\n\n    if (typeof this.options[onFunction] === 'function') {\n      this.options[onFunction].apply(this, params);\n    }\n  }\n\n  getSelect() {\n    return this.$select;\n  }\n\n  destroy() {\n    this.$select.remove();\n    this.$element.data('NavToSelect', null);\n\n    this.trigger('destroy');\n  }\n\n  static setDefaults(options) {\n    $$1.extend(DEFAULTS, $$1.isPlainObject(options) && options);\n  }\n}\n\n$$1.navToSelect = navToSelect;\n\nvar info = {\n  version:'0.5.2'\n};\n\nconst NAMESPACE = 'navToSelect';\nconst OtherNavToSelect = $$1.fn.navToSelect;\n\nconst jQueryNavToSelect = function(options, ...args) {\n  if (typeof options === 'string') {\n    const method = options;\n\n    if (/^_/.test(method)) {\n      return false;\n    } else if ((/^(get)/.test(method))) {\n      const instance = this.first().data(NAMESPACE);\n      if (instance && typeof instance[method] === 'function') {\n        return instance[method](...args);\n      }\n    } else {\n      return this.each(function() {\n        const instance = $$1.data(this, NAMESPACE);\n        if (instance && typeof instance[method] === 'function') {\n          instance[method](...args);\n        }\n      });\n    }\n  }\n\n  return this.each(function() {\n    if (!$$1(this).data(NAMESPACE)) {\n      $$1(this).data(NAMESPACE, new navToSelect(this, options));\n    }\n  });\n};\n\n$$1.fn.navToSelect = jQueryNavToSelect;\n\n$$1.navToSelect = $$1.extend({\n  setDefaults: navToSelect.setDefaults,\n  noConflict: function() {\n    $$1.fn.navToSelect = OtherNavToSelect;\n    return jQueryNavToSelect;\n  }\n}, info);\n"]}